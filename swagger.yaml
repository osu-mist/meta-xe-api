swagger: '2.0'
info:
  version: "0.0.1"
  title: XE Meta API
  description: Find out what XE applications are running, in what instances, and their versions.
consumes:
  - application/json
paths:
  /xeapps:
    get:
      description: "Get all applications, their versions, and what instances they're deployed in."
      produces:
        - application/json
      parameters:
        - name: q
          in: query
          description: "Search query for the name of an XE application."
          required: false
          type: string
        - name: instance
          in: query
          description: >
            Filter by what instance the application is deployed in.
            Acceptable values are prod, devl, or dev2.
          required: false
          type: string
        - name: version
          in: query
          description: "Filter by what version is deployed."
          required: false
          type: string
        - name: page[size]
          in: query
          description: "Number of results to return. Used in pagination. Default value is 10."
          required: false
          type: string
        - name: page[number]
          in: query
          description: "Page number of results. Used to paginate through results."
          required: false
          type: string
        - $ref: '#/parameters/authorization'
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/ResultObject"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
  /xeapps/{id}:
    get:
      description: "Get a specific application by ID."
      produces:
        - applicaiton/json
      parameters:
        - name: id
          in: path
          description: "ID of XE application"
          required: true
          type: string
        - $ref: '#/parameters/authorization'
      responses:
        200:
          description: "Successful response"
          schema:
            $ref: "#/definitions/ResultObject"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
parameters:
  authorization:
    name: Authorization
    in: header
    type: string
    required: true
    description: '"Bearer [token]" where token is your OAuth2 access token'
definitions:
  ResultObject:
    properties:
      links:
        $ref: "#/definitions/ResultLinks"
      data:
        type: array
        items:
          $ref: "#/definitions/ResourceObject"
  ResourceObject:
    properties:
      id:
        type: string
      type:
        type: string
      attributes:
        $ref: "#/definitions/Attributes"
      links:
        $ref: "#/definitions/ResourceLinks"
  Attributes:
    properties:
      applicationName:
        type: string
      versions:
        $ref: "#/definitions/Versions"
  Versions:
    properties:
      prod:
        type: string
      devl:
        type: string
      dev2:
        type: string
  ResultLinks:
    properties:
      self:
        type: string
      first:
        type: string
      last:
        type: string
      prev:
        type: string
      next:
        type: string
  ResourceLinks:
    properties:
      self:
        type: string
  Error:
    type: object
    properties:
      status:
        type: integer
        format: int32
      developerMessage:
        type: string
      userMesage:
        type: string
      code:
        type: integer
      details:
        type: string
